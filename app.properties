
# --------- JAR conf section -------------

# This is the path for the IterativeReduce JAR
iterativereduce.jar.path=iterativereduce-0.1-SNAPSHOT.jar

# Path to user application (persumably compiled against IterativeReduce)
app.jar.path=KnittingBoar-1.0-SNAPSHOT-jar-with-dependencies.jar

# Comma separated list of other JAR files required to run application (on local filesystem)
app.lib.jar.path=avro-1.7.1.jar,avro-ipc-1.7.1.jar


# --------- IterativeReduce conf section ------------ 

# Input path for the application. HDFS URIs acceptable
app.input.path=hdfs:///tmp/input.dat

# Output path where the master will write results to. HDFS URIs acceptable
app.output.path=hdfs:///tmp/output

# Batch size
app.batch.size=200

# Number of iterations
app.iteration.count=1

# --------- YARN Junk conf section ------------ 

# Requested memory per worker (including application master)
yarn.memory=512

# The main() class/entry for user-defined ComputableMaster
yarn.master.main=com.cloudera.knittingboar.sgd.iterativereduce.POLRMasterNode
# Any extra command-line args to be passed when invoking this main()
yarn.master.args=

# The main() class/entry for user-defined ComputableWorker
yarn.worker.main=com.cloudera.knittingboar.sgd.iterativereduce.POLRWorkerNode
# Any extra command-line args to be passed when invoking this main()
yarn.worker.args=


# --------- KnittingBoar conf section ------------ 

# Any other configuration params, will be pushed down to workers
# app.conf1=some value
# app.conf2=some other value

com.cloudera.knittingboar.setup.FeatureVectorSize=10000

com.cloudera.knittingboar.setup.numCategories=20
    
com.cloudera.knittingboar.setup.BatchSize=200
    
com.cloudera.knittingboar.setup.NumberPasses=1
    
com.cloudera.knittingboar.setup.RecordFactoryClassname=com.cloudera.knittingboar.records.TwentyNewsgroupsRecordFactory

